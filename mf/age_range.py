# This script is meant to apply age ranges to customer children based on the products that they have purchased
# It is based on a mapping of categories to buy/use age generated by the catalog.csv file

import pandas as pd
import numpy as np
import math
from progress.bar import Bar

catalog = pd.read_csv('catalog.csv')
customers = pd.read_csv('customers_clean.csv')

# collect buy ages based on registered/purchased products
# combine to 1 buy age range

# estimated age dictionary
ea_df = pd.DataFrame([
    (0),
    (1),
    (2),
    (3),
    (4),
    (5),
    (6),
    (7),
    (8)
],index=[
    '0',
    '4 mos',
    '1 yr',
    '2 yrs',
    '3 yrs',
    '4 yrs',
    '5 yrs',
    '10 yrs',
    '+',
],columns=[
    'number'
])

# buy age dictionary
ba_df = pd.DataFrame([
    (0),
    (1),
    (2),
    (3),
    (4),
    (5),
    (6),
    (7),
    (8)
],index=[
    'expectant',
    '0',
    '1 mo',
    '4 mos',
    '6 mos',
    '1 yr',
    '18 mos',
    '2 yrs',
    '+'
],columns=[
    'number'
])

cust_w_reg = customers['Products Registered'].dropna()

bar = Bar('Adding Age Ranges to customers...', max=len(cust_w_reg))

# fill buy range from products
for i in cust_w_reg.index:
    # print(i)
    products = [cust_w_reg.loc[i]]
    # print(products)
    prod_str = [str(x) for x in products]
    cust_prod = catalog[catalog['Variant SKU'].isin(prod_str)].index.values

    if len(cust_prod) > 0:
        buy_range = catalog.loc[cust_prod, 'Buy Age']
        # print(buy_range)
        age_range = catalog.loc[cust_prod, 'Estimated Age']

        # if (len(buy_range.dropna()) > 0) and (len(cust_prod) == 1):
        #     print(customers.loc[i].to_string())
        #     customers.loc[i,'Estimated Buy Age'] = buy_range
        #     customers.loc[i,'Child 1 Age'] = age_range

        # elif (len(buy_range.dropna()) > 0) and (len(cust_prod) > 1):
        if len(buy_range.dropna()) > 0:
            # buy_range = pd.Series(['expectant - 6 mos','4 mos - 2 yrs','4 mos +'])
            
            buy_n = []
            
            if len(buy_range) == 1:
                # buy = buy_range
                # buy_n.append(ba_df.loc[buy[0]][0])
                buy = buy_range.reset_index(drop=True)
                # print(buy)
                est_buy_range = buy[0]
                # print(est_buy_range)
                
            else:
                buy = buy_range.str.split(" - ")
                for y in buy.index:
                    if len(buy[y]) <= 1:
                        buy[y] = buy[y].str.rsplit(n=1)
                    x = 0
                    while x < len(buy[y]):
                        buy_n.append(ba_df.loc[buy[y][x]][0])
                        x += 1
                
                min_buy = ba_df.index[ba_df['number'] == min(buy_n)].tolist()
                max_buy = ba_df.index[ba_df['number'] == max(buy_n)].tolist()
                if max_buy[0] == '+':
                    est_buy_range = min_buy[0] + ' ' + max_buy[0]
                else:
                    est_buy_range = min_buy[0] + ' - ' + max_buy[0]

            customers.loc[i,'Estimated Buy Age'] = est_buy_range

            age_n = []

            if len(age_range) == 1:
                # age = age_range
                # age_n.append(ea_df.loc[age[0]][0])
                age = age_range.reset_index(drop=True)
                est_age_range = age[0]
                # print(est_age_range)
                
            else:
                age = age_range.str.split(" - ")
                for y in age.index:
                    if len(age[y]) <= 1:
                        age[y] = age[y].str.rsplit(n=1)
                    x = 0
                    while x < len(age[y]):
                        age_n.append(ea_df.loc[age[y][x]][0])
                        x += 1
                
                # if (math.isnan(customers.loc[i,'No. of Children'])) or (customers.loc[i,'No. of Children'] <= 1):
                    # print(age_n)
                min_age = ea_df.index[ea_df['number'] == min(age_n)].tolist()
                max_age = ea_df.index[ea_df['number'] == max(age_n)].tolist()
                if max_age[0] == '+':
                    est_age_range = min_age[0] + ' ' + max_age[0]
                else:
                    est_age_range = min_age[0] + ' - ' + max_age[0]
            
            customers.loc[i,'Child 1 Age'] = est_age_range

            # print(buy)

            # for y in buy.index:
            #     if len(buy[y]) <= 1:
            #         buy_n.append(8)
            #     else:
            #         x = 0
            #         while x < len(buy[y]):
            #             buy_n.append(ba_df.loc[buy[y][x]][0])
            #             x += 1

            # for y in age.index:
            #     if len(age[y]) <= 1:
            #         age_n.append(8)
            #     else:
            #         x = 0
            #         while x < len(age[y]):
            #             age_n.append(ea_df.loc[age[y][x]][0])
            #             x += 1

    bar.next()

customers.to_csv("customers_clean_age_range.csv")
bar.finish()  